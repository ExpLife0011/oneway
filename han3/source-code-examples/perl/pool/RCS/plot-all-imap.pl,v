head	1.5;
access;
symbols;
locks
	bbuser:1.5; strict;
comment	@# @;


1.5
date	2004.03.09.22.44.30;	author bbuser;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.09.15.32.14;	author bbuser;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.09.15.20.24;	author bbuser;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.02.21.26.14;	author bbuser;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.02.20.50.51;	author bbuser;	state Exp;
branches;
next	;


desc
@working prototype.
@


1.5
log
@Minor fix after color change.
@
text
@#!/usr/bin/perl
# $Id: plot-all-imap.pl,v 1.4 2004/03/09 15:32:14 bbuser Exp bbuser $
# This program plots the 1km tasks in all the queues: "bones", "munching", "done", 
# and "crashes".  Output an image map for the "done" blocks so results
# can be plotted. 

@@keys=("crashes", "done", "bones", "munching");  # let "done" overwrite "crashes"
$blockfile = "/usr/local/apache/cgi-bin/pool/blocks.ctl"; 
$imglink = "/pool/all-map.gif"; 
$docroot = "/usr/local/apache/htdocs"; 
$imgfile = "$docroot//$imglink"; 
$mapfile = "/usr/local/apache/cgi-bin/pool/all-map.1gd1i"; 
$ctlfile = "/usr/local/apache/cgi-bin/pool/all-map.ctl"; 

$title{'bones'} = "Remaining jobs"; 
$title{'munching'} = "Current assignments"; 
$title{'done'} = "Finished jobs"; 
$title{'crashes'} = "Crashed jobs"; 

$maxic = 50; #max ic
$maxir = 50; #max ir
$total = $maxic * $maxir;  ### 50 by 50

$i = 1; # levels
foreach $key (@@keys) {
 $items = "/data1/pool/$key"; 
 @@bones = `ls -U $items`; 

 foreach $line (@@bones) {
  chomp $line; 
   if ($line =~ /\-/) {   # if it has a host name in it
    ($host, $tmp) = split /\-/, $line; 
    $line = $tmp;
   }
  ($ic, $ir) = split /_/, $line; 
  $index = ($ir -1) * $maxic + $ic; 
  # fill with numbers
  $map[$index] = $i; 
  $hosts[$index] = $host;      # record the machine to be used later 
 } # end foreach  @@bones

$i++; 
} # end foreach @@keys 

$map[$total] = 5;  # fill a data point to eliminate the msg "uniform data..." on plot. 

open(MAP, ">$mapfile") or die "Can not open map file: $!\n"; 
binmode MAP; 
for (my $i=1; $i <= $total; $i++) { 
 print MAP pack("C1", $map[$i]); 
}
close(MAP); 

## get control file in place 
open(CTL, ">$ctlfile") or die "Can not open ctl file: $!\n"; 
 print CTL <<ENDCTL; 
DSET  $mapfile
TITLE  dogmap 
UNDEF  0
XDEF   50  LINEAR        -176.4 7.2
YDEF   50  LINEAR         -58.5 3
ZDEF    1   LINEAR           1    1
TDEF     1  LINEAR  00Z01jan2002    1mo
VARS     1
var   1  -1,40,1  map 
ENDVARS

ENDCTL

close(CTL); 

#`/data1/grads/gradsc -bl << EOSCRP
`export GADDIR=/data1/grads/lib; export GASCRP=/data1/grads/lib/scripts; /data1/grads-1.8sl11/xgrads -bl << EOSCRP
open $ctlfile
open $blockfile
set mpdset hires
set mpdraw on 
set grads off
set dfile 1 
set lon -180 180
set lat -60 90
set clevs 1 2 3 4 5
set ccols 2 3 8 7 0
set gxout grfill
d var
set dfile 2
set ccolor 10
set cthick 4
set gxout grid
set mpdraw on 
set clevs 0 100
d var 
draw title ORANGE/tasks  YELLOW/doing  GREEN/done  RED/crashed
printim $imgfile gif
quit
EOSCRP`; 

# output image map
print <<HTMLHEADER;
Content-type: text/html

<html>
<head>
<META HTTP-EQUIV="expires" CONTENT="Wed, 26 Feb 1997 08:21:57 GMT">
<title>LIS Cluster System Hardware Monitor</title>
</head>
<body><img src="$imglink" usemap="#green" border="0"> 
<map name="green">
HTMLHEADER

($x0, $y0) = (36, 124);  # starting point of the image (UL corner)
($width, $height) = (726.0/$maxic, 352.0/$maxir); # average cell size
# now print the coordinates
for ($ir = 1; $ir <= $maxir; $ir++) {
  for ($ic = 1; $ic <= $maxic; $ic++) {
   $index = ($ir -1) * $maxic + $ic; 
   if($map[$index] == 2 ) { # this is a done piece
     ($x1, $y1) = ($x0 + int( ($ic-1)*$width ), $y0 + int( ($maxir - $ir)* $height) ); 
     ($x2, $y2) = ($x0 + int( $ic*$width ), $y0 + int(($maxir - $ir + 1)* $height) ); 
     $host = $hosts[$index]; 
    print <<COORD;
<area shape="rect" coords="$x1,$y1,$x2,$y2"
href="/cgi-bin/pool/call-nodeplot.pl?host=$host\&ic=$ic\&ir=$ir"> 
COORD
    } # end if 
  } # end for ic
} # end for ir

print <<MAPEND;
</map>
</body></html>

MAPEND






@


1.4
log
@Plot the anchor cell black.
@
text
@d2 1
a2 1
# $Id: plot-all-imap.pl,v 1.3 2004/03/09 15:20:24 bbuser Exp bbuser $
d117 1
a117 1
   if($map[$index] == 1 ) { # this is a done piece
@


1.3
log
@Changed color scheme a bit, so "crashes" are plotted first, other queues can overwrite it.
@
text
@d2 1
a2 1
# $Id: plot-all-imap.pl,v 1.2 2004/03/02 21:26:14 bbuser Exp bbuser $
d45 1
a45 1
$map[$total] = 1;  # fill a data point to eliminate the msg "uniform data..." on plot. 
d82 2
a83 2
set clevs 1 2 3 4
set ccols 2 3 8 7 
@


1.2
log
@Working version. href in the image map needs to be set.
@
text
@d2 1
a2 1
# $Id: plot-all-imap.pl,v 1.1 2004/03/02 20:50:51 bbuser Exp bbuser $
d7 1
a7 1
@@keys=("done", "bones", "munching", "crashes"); 
d83 1
a83 1
set ccols 3 8 7 2
d123 1
a123 1
href="http://lis.gsfc.nasa.gov/index.html?host=$host\&ic=$ic\&ir=$ir"> 
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id: plot-all.pl,v 1.3 2004/02/28 03:32:44 bbuser Exp bbuser $
d81 1
d111 2
d118 2
a119 1
     ($x1, $y1, $x2, $y2) = (10, 20, 30, 40); 
@
